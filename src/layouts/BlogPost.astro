---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import Layout from "@/layouts/Base.astro";
import SectionHeading from "@/components/ui/SectionHeading.astro";
import LeftArrowIcon from "@/icon/LeftArrowIcon.astro";
import { calculateReadingTime } from "@/utils/readingTime";

type Props = CollectionEntry<"blog">["data"] & { slug?: string };

const { slug, title, description, pubDate, updatedDate, heroImage } =
  Astro.props;

// Get the content from the slot to calculate reading time
const content = Astro.slots.render("default");
const readingTime = calculateReadingTime(await content);
---

<Layout class="pt-24 pb-18">
  <article class="space-y-6">
    <!-- Terminal Header -->
    <div class="space-y-4 font-mono">
      <div class="flex items-center justify-between pb-4">
        <SectionHeading command="cat" heading={slug} extension="md" />
        <a href="/blog/" class="text-neutral-400 hover:text-blue-400 transition-colors text-sm flex items-center space-x-1">
          <LeftArrowIcon class="size-4" />
          <span>cd ..</span>
        </a>
      </div>

      <!-- Hero Image -->
      {
        heroImage && (
            <Image
              width={1020}
              height={510}
              src={heroImage}
              alt={title}
              class="w-full h-64 md:h-96 object-cover rounded"
            />
        )
      }

      <div class="space-y-4 pt-2">
        <h1 class="text-xl font-bold">{title}</h1>
        {
          description && (
            <p class="text-neutral-400 text-sm -mt-2">{description}</p>
          )
        }
      </div>
    </div>

    <!-- Article Content -->
    <div class="space-y-6 py-2">
      <slot />
    </div>

    <div
      class="flex flex-col space-y-2 text-sm text-neutral-400 font-mono border-t border-neutral-700 pt-8 mt-8"
    >
      <span>created: {pubDate.toISOString()}</span>
      <span>
        last modified: {
          updatedDate ? updatedDate.toISOString() : pubDate.toISOString()
        }
      </span>
      <span>estimated read time: {readingTime} min</span>
    </div>
  </article>
</Layout>
